{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLnRkMy5wb2xpY2llc5SMCVREM1BvbGljeZSTlC4=",
        "__module__": "stable_baselines3.td3.policies",
        "__annotations__": "{'actor': <class 'stable_baselines3.td3.policies.Actor'>, 'actor_target': <class 'stable_baselines3.td3.policies.Actor'>, 'critic': <class 'stable_baselines3.common.policies.ContinuousCritic'>, 'critic_target': <class 'stable_baselines3.common.policies.ContinuousCritic'>}",
        "__doc__": "\n    Policy class (with both actor and critic) for TD3.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param n_critics: Number of critic networks to create.\n    :param share_features_extractor: Whether to share or not the features extractor\n        between the actor and the critic (this saves computation time)\n    ",
        "__init__": "<function TD3Policy.__init__ at 0x0000017D7105C860>",
        "_build": "<function TD3Policy._build at 0x0000017D7105C900>",
        "_get_constructor_parameters": "<function TD3Policy._get_constructor_parameters at 0x0000017D7105C9A0>",
        "make_actor": "<function TD3Policy.make_actor at 0x0000017D7105CA40>",
        "make_critic": "<function TD3Policy.make_critic at 0x0000017D7105CAE0>",
        "forward": "<function TD3Policy.forward at 0x0000017D7105CB80>",
        "_predict": "<function TD3Policy._predict at 0x0000017D7105CC20>",
        "set_training_mode": "<function TD3Policy.set_training_mode at 0x0000017D7105CCC0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x0000017D7104B780>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 80000,
    "_total_timesteps": 100000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": {
        ":type:": "<class 'stable_baselines3.common.noise.NormalActionNoise'>",
        ":serialized:": "gAWVEgEAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5ub2lzZZSMEU5vcm1hbEFjdGlvbk5vaXNllJOUKYGUfZQojANfbXWUjBNudW1weS5fY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAoWUjAFDlHSUUpSMBl9zaWdtYZRoCCiWEAAAAAAAAACamZmZmZm5P5qZmZmZmbk/lGgPSwKFlGgTdJRSlIwGX2R0eXBllGgKjAdmbG9hdDMylJOUdWIu",
        "_mu": "[0. 0.]",
        "_sigma": "[0.1 0.1]",
        "_dtype": "<class 'numpy.float32'>"
    },
    "start_time": 1744690239756401500,
    "learning_rate": 0.005,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVlgAAAAAAAACME251bXB5Ll9jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsIhpSMAUOUdJRSlC4="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdQAAAAAAAACME251bXB5Ll9jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWAQAAAAAAAAABlIwFbnVtcHmUjAVkdHlwZZSTlIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksBhZSMAUOUdJRSlC4="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVlgAAAAAAAACME251bXB5Ll9jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsIhpSMAUOUdJRSlC4="
    },
    "_episode_num": 79,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.20001000000000002,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 79899,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWV0AEAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLCIWUjANsb3eUjBNudW1weS5fY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QoliAAAAAAAAAAAACA/wAAgP8AAID/AACA/wAAgP8AAID/AACA/wAAgP+UaAtLCIWUjAFDlHSUUpSMDWJvdW5kZWRfYmVsb3eUaBMolggAAAAAAAAAAAAAAAAAAACUaAiMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLCIWUaBZ0lFKUjARoaWdolGgTKJYgAAAAAAAAAAAAgH8AAIB/AACAfwAAgH8AAIB/AACAfwAAgH8AAIB/lGgLSwiFlGgWdJRSlIwNYm91bmRlZF9hYm92ZZRoEyiWCAAAAAAAAAAAAAAAAAAAAJRoHUsIhZRoFnSUUpSMCGxvd19yZXBylIwELWluZpSMCWhpZ2hfcmVwcpSMA2luZpSMCl9ucF9yYW5kb22UTnViLg==",
        "dtype": "float32",
        "_shape": [
            8
        ],
        "low": "[-inf -inf -inf -inf -inf -inf -inf -inf]",
        "bounded_below": "[False False False False False False False False]",
        "high": "[inf inf inf inf inf inf inf inf]",
        "bounded_above": "[False False False False False False False False]",
        "low_repr": "-inf",
        "high_repr": "inf",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVNwMAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLAoWUjANsb3eUjBNudW1weS5fY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolggAAAAAAAAAAACAvwAAgL+UaAtLAoWUjAFDlHSUUpSMDWJvdW5kZWRfYmVsb3eUaBMolgIAAAAAAAAAAQGUaAiMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLAoWUaBZ0lFKUjARoaWdolGgTKJYIAAAAAAAAAAAAgD8AAIA/lGgLSwKFlGgWdJRSlIwNYm91bmRlZF9hYm92ZZRoEyiWAgAAAAAAAAABAZRoHUsChZRoFnSUUpSMCGxvd19yZXBylIwELTEuMJSMCWhpZ2hfcmVwcpSMAzEuMJSMCl9ucF9yYW5kb22UjBRudW1weS5yYW5kb20uX3BpY2tsZZSMEF9fZ2VuZXJhdG9yX2N0b3KUk5RoMowUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SME251bXB5LnJhbmRvbS5fcGNnNjSUjAVQQ0c2NJSTlIWUUpR9lCiMDWJpdF9nZW5lcmF0b3KUjAVQQ0c2NJSMBXN0YXRllH2UKGg/ihHfokmsinmqKQm+n6IWd+HuAIwDaW5jlIoQj8oya/AnurT+g+OnSboDOnWMCmhhc191aW50MzKUSwCMCHVpbnRlZ2VylEsAdYwabnVtcHkucmFuZG9tLmJpdF9nZW5lcmF0b3KUjBtfX3B5eF91bnBpY2tsZV9TZWVkU2VxdWVuY2WUk5RoRIwMU2VlZFNlcXVlbmNllJOUSiKi6gNOh5RSlCiKEX1a9dPsRk5EhSm26MUq77IASwBoEyiWEAAAAAAAAADzpQJSWAjX3osBZumY1AeKlGgIjAJ1NJSJiIeUUpQoSwNoDE5OTkr/////Sv////9LAHSUYksEhZRoFnSUUpRLBCl0lGKGlGKFlFKUdWIu",
        "dtype": "float32",
        "_shape": [
            2
        ],
        "low": "[-1. -1.]",
        "bounded_below": "[ True  True]",
        "high": "[1. 1.]",
        "bounded_above": "[ True  True]",
        "low_repr": "-1.0",
        "high_repr": "1.0",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 1000000,
    "batch_size": 256,
    "learning_starts": 100,
    "tau": 0.005,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x0000017D70DA8D60>",
        "add": "<function ReplayBuffer.add at 0x0000017D70DA8EA0>",
        "sample": "<function ReplayBuffer.sample at 0x0000017D70DA8F40>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x0000017D70DA8FE0>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x0000017D70DA9080>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x0000017D70D96100>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLAWgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "policy_delay": 2,
    "target_noise_clip": 0.5,
    "target_policy_noise": 0.2,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV7QMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBUsTQzSVAZcAdAEAAAAAAAAAAAAAAgCJAXwApgEAAKsBAAAAAAAAAACmAQAAqwEAAAAAAAAAAFMAlE6FlIwFZmxvYXSUhZSMEnByb2dyZXNzX3JlbWFpbmluZ5SFlIxgQzpcVXNlcnNcYXJ5YW1hbnJcRGVza3RvcFxFRUNTIDU2OFxSTFxyb2I1OTBcTGliXHNpdGUtcGFja2FnZXNcc3RhYmxlX2Jhc2VsaW5lczNcY29tbW9uXHV0aWxzLnB5lIwIPGxhbWJkYT6UjCFnZXRfc2NoZWR1bGVfZm4uPGxvY2Fscz4uPGxhbWJkYT6US2JDGviAAKVlqE6oTtA7TdEsTtQsTtEmT9QmT4AAlEMAlIwOdmFsdWVfc2NoZWR1bGWUhZQpdJRSlH2UKIwLX19wYWNrYWdlX1+UjBhzdGFibGVfYmFzZWxpbmVzMy5jb21tb26UjAhfX25hbWVfX5SMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi51dGlsc5SMCF9fZmlsZV9flGgOdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCJ9lH2UKGgajAg8bGFtYmRhPpSMDF9fcXVhbG5hbWVfX5SMIWdldF9zY2hlZHVsZV9mbi48bG9jYWxzPi48bGFtYmRhPpSMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBuMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RoAihoByhLAUsASwBLAUsBSxNDCJUBlwCJAVMAlGgJKYwBX5SFlGgOjARmdW5jlIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5RLhkMI+IAA2A8SiAqUaBKMA3ZhbJSFlCl0lFKUaBdOTmgeKVKUhZR0lFKUaCRoQH2UfZQoaBqMBGZ1bmOUaCiMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUaCp9lGgsTmgtTmguaBtoL05oMGgyRz90euFHrhR7hZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjCFlFKUhZRoSV2UaEt9lHWGlIZSMC4="
    },
    "actor_batch_norm_stats": [],
    "critic_batch_norm_stats": [],
    "actor_batch_norm_stats_target": [],
    "critic_batch_norm_stats_target": []
}